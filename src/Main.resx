<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAB8fHz/Z2dn/1tbW/9XV1f/XFxc/2RkZPxqamr8cXFx/Hd3d/x2dnb8dnZ2/Hp6evyAgID8hYWF+4uL
        i/uPj4/7kZGR+5iYmPuWlpb7nZ2d+5SUlPtMTEz9Nzc3/T8/P/06Ojr9Ozs7+js7O/o1NTX6MTEx+jEx
        Mf8xMTH/NjY2/nR0dP9oaGj/YWFh/2NjY/9mZmb/b29v/3V1df94eHj/eXl5/319ff9+fn7/gYGB/4aG
        hv+MjIz/kZGR/5GRkf+QkJD/lpaW/5iYmP+bm5v/hISE/zAwMP8qKir/RUVF/zY2Nv8qKir/LCws/zY2
        Nv82Njb/OTk5/zg4OP83Nzf/b29v/2xsbP9kZGT/bGxs/3Jycv96enr/gICA/4GBgf+Dg4P/h4eH/42N
        jf+MjIz/k5OT/5eXl/+ZmZn/nJyc/5ubm/+dnZ3/m5ub/6ampv9ubm7/Kioq/ysrK/8qKir/ODg4/y0t
        Lf8rKyv/LCws/y0tLf8sLCz/LCws/ywsLP90dHT/fHx8/3l5ef92dnb/goKC/5KSkv+UlJT/kpKS/5iY
        mP+enp7/n5+f/5mZmf+ampr/m5ub/52dnf+bm5v/oKCg/6ampv+np6f/qamp/0FBQf8rKyv/Kysr/ysr
        K/8rKyv/LS0t/ysrK/8rKyv/KSkp/ykpKf8rKyv/Kioq/6Ghof+goKD/np6e/6Ghof+mpqb/p6en/6Cg
        oP+enp7/p6en/6qqqv+vr6//rKys/6qqqv+mpqb/qamp/6qqqv+xsbH/u7u7/7i4uP+ampr/NTU1/yoq
        Kv8sLCz/Kysr/zw8PP82Njb/KSkp/ysrK/8pKSn/Kioq/ysrK/8uLi7/W1tb/1paWv+MjIwAbm5u/2Vl
        Zf9WVlb/WFhY/4aGhv+dnZ0ApqamAKWlpQCdnZ0An5+fAKSkpACqqqoApKSkAKampgBjY2MAZ2dn/2ho
        aP+JiYn/NTU1/zk5OQA1NTUAQEBAAEBAQAAqKir/Kysr/yoqKv8rKyv/Kysr/zU1Nf8tLS3/MDAw/19f
        X/9QUFD/Li4u/yoqKv9FRUX/dHR0/5WVlf+hoaH/mpqa/5KSkv+bm5v/paWl/6ysrP+YmJj/lpaW/2Ji
        Yv9GRkb/RkZG/1RUVP8/Pz//QkJC/zs7O/8tLS3/LS0t/y8vL/8uLi7/ODg4/z09Pf8wMDD/Kysr/ysr
        K/84ODj/NTU1/zQ0NP8rKyv/Kysr/z09Pf+JiYn/nJyc/7Ozs/+urq7/qamp/6+vr/++vr7/zs7O/6Sk
        pP+Ghob/fX19/1hYWP9ERET/WFhY/09PT/8/Pz//Li4u/ysrK/81NTX/dXV1/2FhYf9oaGj/cXFx/zEx
        Mf8rKyv/Kioq/zU1Nf8tLS3/MjIy/ysrK/8rKyv/Li4u/5KSkv+AgID/goKC/4iIiP+0tLT/vLy8/7y8
        vP+VlZX/sbGx/8DAwP93d3f/PDw8/2NjY/9fX1//SEhI/zAwMP8qKir/MTEx/0ZGRv9MTEz/eXl5/2ho
        aP85OTn/Kysr/ysrK/8rKyv/Ojo6/y4uLv8sLCz/Kioq/y4uLv9BQUH/qqqq/4WFhf+BgYH/gICA/8TE
        xP/IyMj/yMjI/5KSkv+Ghob/oKCg/3t7e/8vLy//VFRU/0tLS/8tLS3/KSkp/zU1Nf9HR0f/QUFB/zw8
        PP8tLS3/Kysr/ysrK/8rKyv/Kioq/ysrK/8yMjL/Li4u/zIyMv8pKSn/PT09/1BQUP+1tbX/oKCg/4OD
        g/9sbGz/bm5u/3Fxcf90dHT/cXFx/42Njf+qqqr/nJyc/z09Pf9fX1//MzMz/ysrK/8vLy//RERE/0BA
        QP8/Pz//Ozs7/y4uLv8rKyv/Kysr/yoqKv87Ozv/Kysr/y4uLv8sLCz/Li4u/ysrK/9BQUERXV1d/5OT
        kwCbm5v/wcHB/7m5uf+Ghob/bGxs/2lpaf+/v7//v7+//9LS0v+qqqr/UVFR/zQ0NP8rKyv/MTEx/0pK
        Sv9BQUH/VFRU/0dHR/9CQkL/NDQ0/yoqKv80NDT/UVFR/zMzM/8rKyv/Ojo6/ysrK/8sLCz/Kysr/y8v
        L/9nZ2f/b29v/0dHR//Kysr/tra2/zIyMv9UVFT/R0dH/0FBQf/IyMj/4ODg/97e3v9vb2//Nzc3/zAw
        MP9KSkr/SEhI/zg4OP9JSUn/QkJC/zo6Ov8zMzP/SUlJ/0VFRf8yMjL/Kioq/yoqKr9LS0vAQkJCwDAw
        MP8rKyv/LCws/2VlZf9LS0v/MDAw/8PDw/9QUFD/OTk5/0lJSf9/f3//SUlJ/56env/m5ub/7Ozs/0VF
        Rf8/Pz//T09P/0dHR/8/Pz//SEhI/zg4OP8zMzP/UFBQ/2JiYv9cXFz/NjY2/25ubv8sLCz/KSkp/01N
        Tf88PDz/RkZGwDk5Ob85OTm/ODg4wFlZWb9CQkK/urq6v0lJScB/f3+/UFBQv6CgoL9UVFTAlJSUv+np
        6b/U1NS/S0tLwHx8fL9XV1e/T09Pv0dHR8A1NTW/Pj4+v6Ojo7+enp7AUVFRv3V1db9TU1O/paWlwERE
        RL8rKyv/SUlJ/zMzM/83Nzf/ODg4/01NTf9HR0f/RkZG/2FhYf9oaGj/m5ub/9HR0f9GRkb/g4OD/5+f
        n/+lpaX/8vLy/8rKyv+UlJT/fHx8/3Z2dv9nZ2f/Xl5e/2NjY/+qqqr/9fX1/+vr6/+ysrL/x8fH/8XF
        xf/T09P/SUlJ/yoqKgBCQkIAPDw8AD8/PwBAQEAARUVFAIqKigDJyckA1tbWAOvr6wDy8vIA8PDwANfX
        1wDm5ub/6+vr//X19f/4+Pj/7+/v/8LCwv+lpaX/nZ2d/4yMjP/MzMz/8vLy//r6+v/5+fn/9vb2//X1
        9f/v7+//6+vr/+Tk5P/X19f/bW1tAGZmZgBBQUEAPT09AE5OTgBdXV0AgoKCALW1tQC7u7sAysrKANHR
        0QDPz88A1NTUANzc3ADX19cA3t7eAOLi4gDa2toAnp6eAH19fQCtra0A2NjYANHR0QDU1NQA2NjYANfX
        1wDR0dEAzMzMAMXFxQC7u7sAtra2AJ+fnwB5eXkAjo6OAJGRkQCBgYEAXl5eAD8/PwBeXl4As7OzAL29
        vQDExMQAysrKAMzMzAC/v78AxMTEAM3NzQDT09MA2traAODg4ACRkZEA1NTUANvb2wDR0dEAycnJAMrK
        ygDLy8sAzs7OAMrKygDBwcEAu7u7ALGxsQCqqqoAlpaWAKCgoACurq4Arq6uALe3twDExMQAoKCgAGVl
        ZQDY2NgA3t7eAOXl5QDo6OgA6+vrAO7u7gDv7+8A8vLyAPX19QD5+fkA+Pj4AJGRkQD29vYA8vLyAO7u
        7gDp6ekA6urqAOvr6wDu7u4A6+vrAObm5gDe3t4A2dnZANbW1gDPz88AlJSU/6Ojo/+pqan/tbW1/7+/
        v/+8vLz/j4+P/9HR0f/U1NT/2tra/+Tk5P/r6+v/7u7u/+vr6//n5+f/6enpAO7u7gDy8vIA6+vrAO/v
        7wDs7OwA6OjoAObm5gDq6uoA6enpAOnp6QDm5uYA4eHhANzc3ADY2NgA09PTAMrKygB3d3f/g4OD/4+P
        j/+cnJz/sLCw/7q6uv/BwcH/vr6+/8PDw//Ly8v/29vb/97e3v/k5OT/4+Pj/9zc3P/j4+P/6Ojo/+3t
        7f/q6ur/5eXl/+Li4v/h4eH/4uLi/+Pj4//g4OD/4ODg/9vb2//W1tb/zs7O/9LS0v++vr7/o6Oj/2Vl
        Zf94eHj/e3t7/4aGhv+hoaH/paWl/6CgoP+vr6//uLi4/7q6uv/Gxsb/xsbG/8zMzP/X19f/2tra/+Dg
        4P/j4+P/5+fn/+Xl5f/j4+P/4ODg/+Dg4P/h4eH/4uLi/9/f3//e3t7/1NTU/9LS0v/W1tb/3t7e/9HR
        0f+/v7//cnJy/4KCgv+Li4v/lJSU/56env+mpqb/sLCw/7m5uf/CwsL/xMTE/8zMzP/Ozs7/09PT/9vb
        2//e3t7/5OTk/+bm5v/p6en/6Ojo/+vr6//p6en/6enp/+np6f/s7Oz/6Ojo//f39//t7e3/3d3d//T0
        9P/4+Pj/8/Pz/+zs7P9qamoAgoKCAJKSkgCbm5sAoaGhAKqqqgC0tLQAvLy8AMDAwADKysoAzc3NANTU
        1ADc3NwA4uLi/+bm5v/o6Oj/6enp/+7u7v/w8PD/9fX1/+7u7v/09PT/+Pj4//39/f/9/f3/+fn5/+vr
        6//k5OT/5ubm/9/f3//a2tr/y8vL/3V1dQCOjo4AoKCgAKurqwC0tLQAtLS0ALa2tgC9vb0AxMTEAM3N
        zQDW1tYA4uLiAOjo6ADz8/MA9/f3APDw8ADv7+8A8/PzAPLy8gDw8PAA6OjoAN/f3wDg4OAA6enpANzc
        3ADNzc0AycnJAMXFxQDGxsYAwsLCALy8vACoqKgAe3t7AJWVlQCoqKgAsrKyAL29vQC9vb0Aurq6AMLC
        wgDLy8sA2NjYAN/f3wDw8PAA7u7uAOjo6ADg4OAA5OTkAOHh4QDb29sA1dXVANPT0wDU1NQA1tbWANbW
        1gDT09MAzs7OAMvLywDHx8cAv7+/ALy8vAC1tbUAq6urAJ+fnwB0dHQAlZWVAKqqqgCvr68AxcXFAMLC
        wgC6uroAvr6+AMLCwgDBwcEAxMTEAMnJyQDGxsYAxcXFAMfHxwDLy8sA0dHRANLS0gDT09MA1tbWANnZ
        2QDb29sA3NzcANnZ2QDS0tIA0NDQAMfHxwC/v78AuLi4AK2trQCdnZ0AkpKSAHJycv+MjIz/nJyc/6Wl
        pf+pqan/qqqq/62trf+1tbX/t7e3/7S0tP+1tbX/urq6/729vf/BwcH/yMjIANHR0QDV1dUA2NjYANra
        2gDf398A39/fANvb2wDc3NwA2NjYANTU1ADMzMwAx8fHAMHBwQC5ubkAsLCwAKampgCVlZUAbW1t/3Z2
        dv+Ghob/kJCQ/5ycnP+mpqb/r6+v/7W1tf+0tLT/sbGx/7S0tP+3t7f/vb29/8jIyP/U1NT/3Nzc/93d
        3f/c3Nz/2tra/9ra2v/Y2Nj/2NjY/9ra2v/Y2Nj/09PT/87Ozv/MzMz/xcXF/7y8vP+xsbH/qamp/5qa
        mv9ra2v/d3d3/4SEhP+Pj4//nZ2d/6urq/+xsbH/tra2/7e3t/+3t7f/tra2/7a2tv+6urr/wcHB/87O
        zv/X19f/19fX/9vb2//a2tr/2tra/9jY2P/d3d3/4uLi/9/f3//T09P/09PT/9TU1P/MzMz/wMDA/7S0
        tP+qqqr/o6Oj/3h4eP+AgID/hoaG/5GRkf+enp7/paWl/62trf+zs7P/tLS0/7Kysv+tra3/q6ur/66u
        rv+ysrL/vr6+/8jIyP/V1dX/39/f/97e3v/c3Nz/39/f/93d3f/d3d3/3Nzc/9DQ0P/Pz8//0NDQ/8nJ
        yf/CwsL/u7u7/7S0tP+ysrL/AAAAAAAAAAAAAAAAAAAAAAAAAAAg/8PAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAAAAAAAAAAAAAAAAAAAAAAAAAP/4AAD///////////////8AAf//AAAAAAAAAAAAAAAA//gAAP//
        /////////////wAD//8AAAAAAAAAAAAAAAA=
</value>
  </data>
</root>